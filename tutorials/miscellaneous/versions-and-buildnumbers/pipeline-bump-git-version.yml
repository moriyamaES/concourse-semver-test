---
resources:
  - name: git-repository
    type: git
    source:
      branch: main
      # sshで認証するため、uriはsshのuriに設定する必要がある(httpsだと正常動作しない）
      uri: git@github.com:moriyamaES/semver-test.git
      # GitHubに接続するための秘密鍵はVaultで管理
      private_key: ((private-key))
jobs:
  - name: job-bump-date
    plan:
      - get: git-repository
      - task: bump-timestamp-file
        config:
          platform: linux
          image_resource:
            type: docker-image
            # bashとgitが実行できるコンテナをpull
            source: {repository: getourneau/alpine-bash-git}
          # outputsをinputsと同じ名前にしないと正常動作しない模様
          inputs:
            - name: git-repository
          outputs:
            - name: git-repository
          run:
            path: /bin/sh
            args:
              - -exc
              - |

                # この時点ではconcorseがgit cloneを実行してるため、git cloneの実行は不要。
                # gitのローカルリポジトリのディレクトリに移動
                cd git-repository

                # 現在のバージョンを取得
                current_version=$(cat ./version/number)
                
                # バージョンをバンプするタイプを指定
                bump_type=${bump_type:-"major"}  # デフォルトはメジャーバージョンをバンプ
                
                # current_version が空文字列の場合、適切な初期バージョンを設定
                if [ -z "$current_version" ]; then
                    if [ "$bump_type" = "major" ]; then
                      new_version="1.0.0"
                    elif [ "$bump_type" = "minor" ]; then
                      new_version="0.1.0"
                    elif [ "$bump_type" = "patch" ]; then
                      new_version="0.0.1"
                    else
                      echo "Invalid bump_type specified."
                      exit 1
                    fi
                else
                  # バージョンをバンプする
                  IFS='.' read -r -a version_parts <<< "$current_version"
                  major="${version_parts[0]}"
                  minor="${version_parts[1]}"
                  patch="${version_parts[2]}"
                  
                  if [ "$bump_type" = "major" ]; then
                    major=$((major + 1))
                    minor=0
                    patch=0
                  elif [ "$bump_type" = "minor" ]; then
                    minor=$((minor + 1))
                    patch=0
                  elif [ "$bump_type" = "patch" ]; then
                    patch=$((patch + 1))
                  fi
          
                  new_version="$major.$minor.$patch"
                fi
          
                # 新しいバージョンをファイルに書き込む
                echo "$new_version" > ./version/number
                cat ./version/number

                # コミットしタグを付加する
                git config --global user.email "concourse@local" # メールアドレスは必須（ユーザ名は任意）
                git add ./version/number
                git commit -m "Bump version to $new_version"
                git tag v$new_version
      
      # このPUTで、ローカルリポジトリからリポジトリへのpushを実行するため、git pushの実行は不要。
      - put: git-repository
        params:
          repository: git-repository
